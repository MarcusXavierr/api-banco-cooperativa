version: '3.5'

services:
  api01: &api
    build: .
    environment:
      HTTP_PORT: 8080
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '100MB'
    network_mode: "host"

  api02:
    <<: *api
    environment:
      HTTP_PORT: 8081
      DB_PORT: 5432

  nginx:
    image: nginx:latest
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    network_mode: "host"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '50MB'

  db:
    image: postgres
    hostname: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: rinhadb
    volumes:
      - ./.docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./.docker/posgres/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 25s
    # command:
    #   [
    #     "postgres",
    #     "-c",
    #     "config_file=/docker-entrypoint-initdb.d/postgresql.conf",
    #   ]
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: '300MB'
